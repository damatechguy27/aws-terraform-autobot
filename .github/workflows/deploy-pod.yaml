name: Deploy Pods to EKS

on:
    workflow_dispatch:

# concurrency make sure only 1 job and be ran at a time
concurrency:
    group: testing
    cancel-in-progress: true

jobs:
  Deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET }}
        aws-region: us-west-2  # Replace with your AWS region

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Install kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

        curl -Lo aws-iam-authenticator https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/latest/download/aws-iam-authenticator_$(uname -s)_$(uname -m)
        chmod +x ./aws-iam-authenticator
        sudo mv ./aws-iam-authenticator /usr/local/bin/

    - name: Find EKS Cluster
      id: find-cluster
      run: |
          CLUSTER_NAME=$(aws eks list-clusters --region us-west-2 --query "clusters[?contains(@, 'EKS-LAB')]" --output text)
          echo "Cluster found: $CLUSTER_NAME"
          echo "::set-output name=cluster_name::$CLUSTER_NAME"
          aws eks get-token --cluster-name $CLUSTER_NAME 
  
    - name: Update kubeconfig
      if: steps.find-cluster.outputs.cluster_name != ''
      run: |
            aws eks update-kubeconfig --name ${{ steps.find-cluster.outputs.cluster_name }} --region us-west-2
  

    - name: Get ECR repo URL
      run: |
        ECR_REPO_URL=$(aws ecr describe-repositories --query "repositories[?contains(repositoryName, 'myjsapp')].repositoryUri" --output text)
        echo $ECR_REPO_URL >> $GITHUB_ENV

    - name: Authenticate Docker to ECR
      id: ecr-login
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

     

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Replace placeholders in your Kubernetes YAML files
        sed -i "s|ECR_REPO_URI:IMAGE_TAG|$ECR_REPO_URI:latest|g" myjsapp-deployment.yaml
        # Apply Kubernetes manifests
        kubectl apply -f myjsapp-deployment.yaml
#        kubectl apply -f k8s-service.yaml

    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services
